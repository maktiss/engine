cmake_minimum_required(VERSION 3.0.0)
project(Engine VERSION 0.1.0)

find_package(Threads REQUIRED)
find_package(Vulkan REQUIRED)
find_package(glfw3 REQUIRED)

include(CTest)
enable_testing()

set(CMAKE_CXX_STANDARD 20)

add_executable(
	${PROJECT_NAME}
	src/engine/Core.cpp
	src/engine/Core.hpp
	src/engine/components/CameraComponent.hpp
	src/engine/components/ComponentBase.hpp
	src/engine/components/Components.hpp
	src/engine/components/LightComponent.hpp
	src/engine/components/ModelComponent.hpp
	src/engine/components/ScriptComponent.hpp
	src/engine/components/TransformComponent.hpp
	src/engine/graphics/BoundingBox.hpp
	src/engine/graphics/BoundingSphere.hpp
	src/engine/graphics/Buffer.cpp
	src/engine/graphics/Buffer.hpp
	src/engine/graphics/DescriptorSetArray.cpp
	src/engine/graphics/DescriptorSetArray.hpp
	src/engine/graphics/Frustum.cpp
	src/engine/graphics/Frustum.hpp
	src/engine/graphics/OneTimeCommandBuffer.hpp
	src/engine/graphics/StagingBuffer.cpp
	src/engine/graphics/StagingBuffer.hpp
	src/engine/graphics/materials/MaterialBase.hpp
	src/engine/graphics/materials/Materials.hpp
	src/engine/graphics/materials/SimpleMaterial.hpp
	src/engine/graphics/meshes/MeshBase.hpp
	src/engine/graphics/meshes/Meshes.hpp
	src/engine/graphics/meshes/StaticMesh.hpp
	src/engine/graphics/shaders/GraphicsShaderBase.hpp
	src/engine/graphics/shaders/IrradianceShader.hpp
	src/engine/graphics/shaders/PostFxShader.hpp
	src/engine/graphics/shaders/ReflectionShader.hpp
	src/engine/graphics/shaders/Shader.hpp
	src/engine/graphics/shaders/Shaders.hpp
	src/engine/graphics/shaders/SimpleShader.hpp
	src/engine/graphics/shaders/SkyboxShader.hpp
	src/engine/graphics/shaders/SkymapShader.hpp
	src/engine/graphics/textures/Texture2D.hpp
	src/engine/graphics/textures/TextureBase.hpp
	src/engine/managers/ConfigManager.cpp
	src/engine/managers/ConfigManager.hpp
	src/engine/managers/EntityManager.cpp
	src/engine/managers/EntityManager.hpp
	src/engine/managers/EntityManagerBase.hpp
	src/engine/managers/GlobalStateManager.hpp
	src/engine/managers/GlobalStateManagerBase.hpp
	src/engine/managers/GraphicsShaderManager.cpp
	src/engine/managers/GraphicsShaderManager.hpp
	src/engine/managers/GraphicsShaderManagerBase.hpp
	src/engine/managers/InputManager.cpp
	src/engine/managers/InputManager.hpp
	src/engine/managers/Managers.hpp
	src/engine/managers/MaterialManager.cpp
	src/engine/managers/MaterialManager.hpp
	src/engine/managers/MeshManager.cpp
	src/engine/managers/MeshManager.hpp
	src/engine/managers/ResourceManagerBase.hpp
	src/engine/managers/ScriptManager.cpp
	src/engine/managers/ScriptManager.hpp
	src/engine/managers/ScriptManagerBase.hpp
	src/engine/managers/TextureManager.cpp
	src/engine/managers/TextureManager.hpp
	src/engine/renderers/compute/ComputeRendererBase.hpp
	src/engine/renderers/graphics/GraphicsRendererBase.cpp
	src/engine/renderers/graphics/GraphicsRendererBase.hpp
	src/engine/renderers/graphics/DepthNormalRenderer.cpp
	src/engine/renderers/graphics/DepthNormalRenderer.hpp
	src/engine/renderers/graphics/ForwardRenderer.cpp
	src/engine/renderers/graphics/ForwardRenderer.hpp
	src/engine/renderers/graphics/ImGuiRenderer.cpp
	src/engine/renderers/graphics/ImGuiRenderer.hpp
	src/engine/renderers/graphics/IrradianceMapRenderer.cpp
	src/engine/renderers/graphics/IrradianceMapRenderer.hpp
	src/engine/renderers/graphics/ObjectRendererBase.cpp
	src/engine/renderers/graphics/ObjectRendererBase.hpp
	src/engine/renderers/graphics/PostFxRenderer.cpp
	src/engine/renderers/graphics/PostFxRenderer.hpp
	src/engine/renderers/graphics/ReflectionRenderer.cpp
	src/engine/renderers/graphics/ReflectionRenderer.hpp
	src/engine/renderers/graphics/ShadowMapRenderer.cpp
	src/engine/renderers/graphics/ShadowMapRenderer.hpp
	src/engine/renderers/graphics/SkyboxRenderer.cpp
	src/engine/renderers/graphics/SkyboxRenderer.hpp
	src/engine/renderers/graphics/SkymapRenderer.cpp
	src/engine/renderers/graphics/SkymapRenderer.hpp
	src/engine/renderers/transfer/MipMapRenderer.cpp
	src/engine/renderers/transfer/MipMapRenderer.hpp
	src/engine/renderers/transfer/TransferRendererBase.cpp
	src/engine/renderers/transfer/TransferRendererBase.hpp
	src/engine/renderers/RendererBase.cpp
	src/engine/renderers/RendererBase.hpp
	src/engine/renderers/Renderers.hpp
	src/engine/scripts/CameraScript.cpp
	src/engine/scripts/CameraScript.hpp
	src/engine/scripts/FloatingObjectScript.cpp
	src/engine/scripts/FloatingObjectScript.hpp
	src/engine/scripts/ScriptBase.hpp
	src/engine/scripts/Scripts.hpp
	src/engine/scripts/SunMovementScript.cpp
	src/engine/scripts/SunMovementScript.hpp
	src/engine/states/DebugState.hpp
	src/engine/states/ImGuiState.hpp
	src/engine/states/States.hpp
	src/engine/systems/ImGuiSystem.cpp
	src/engine/systems/ImGuiSystem.hpp
	src/engine/systems/InputSystem.cpp
	src/engine/systems/InputSystem.hpp
	src/engine/systems/RenderingSystem.cpp
	src/engine/systems/RenderingSystem.hpp
	src/engine/systems/ScriptingSystem.cpp
	src/engine/systems/ScriptingSystem.hpp
	src/engine/systems/SystemBase.hpp
	src/engine/systems/Systems.hpp
	src/engine/utils/CPUTimer.hpp
	src/engine/utils/Generator.hpp
	src/engine/utils/Importer.cpp
	src/engine/utils/Importer.hpp
	src/engine/utils/IO.hpp
	src/engine/utils/StbImageImpl.cpp
	src/engine/utils/ThreadPool.cpp
	src/engine/utils/ThreadPool.hpp
	src/engine/utils/VkMemAllocImpl.cpp
	src/thirdparty/imgui/imgui.cpp
	src/thirdparty/imgui/imgui_demo.cpp
	src/thirdparty/imgui/imgui_draw.cpp
	src/thirdparty/imgui/imgui_impl_glfw.cpp
	src/thirdparty/imgui/imgui_impl_vulkan.cpp
	src/thirdparty/imgui/imgui_tables.cpp
	src/thirdparty/imgui/imgui_widgets.cpp
	src/main.cpp
)

target_include_directories(
	${PROJECT_NAME} PRIVATE
	src/
	include/
	/usr/include
)

target_link_libraries(
	${PROJECT_NAME}
	Threads::Threads
	Vulkan::Vulkan
	glfw
	spdlog
	glslang
	SPIRV
	SPIRV-Tools
	SPIRV-Tools-opt
	shaderc_combined
	assimp
	${CMAKE_DL_LIBS}
)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
